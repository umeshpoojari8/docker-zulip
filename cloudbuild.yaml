steps:
  # Step 4: Authenticate kubectl with GKE cluster
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'container'
      - 'clusters'
      - 'get-credentials'
      - '${_GKE_CLUSTER}'
      - '--zone=${_GKE_ZONE}'
      - '--project=$PROJECT_ID'

  # Step 5: Deploy the new Docker image to GKE
  - name: 'gcr.io/cloud-builders/kubectl'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=${_GKE_ZONE}'
      - 'CLOUDSDK_CONTAINER_CLUSTER=${_GKE_CLUSTER}'
    args:
      - 'apply'
      - '-f'
      - 'kubernetes/kube'

  # Step 6: Verify nodes in the GKE cluster
  - name: 'gcr.io/cloud-builders/kubectl'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=${_GKE_ZONE}'
      - 'CLOUDSDK_CONTAINER_CLUSTER=${_GKE_CLUSTER}'
    args:
      - 'get'
      - 'nodes'

substitutions:
  _GKE_CLUSTER: 'ggai'
  _GKE_ZONE: 'us-central1'

logsBucket: gs://ggai-zulip

# Ensure the Cloud Build service account has appropriate roles:
# - roles/container.developer (for GKE access)
# - roles/storage.admin (for GCR access)
