apiVersion: apps/v1
kind: Deployment
metadata:
  name: zulip
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zulip
  template:
    metadata:
      labels:
        app: zulip
    spec:
      containers:
      - name: zulip
        image: zulip/docker-zulip:9.3-0
        env:
        - name: DB_HOST
          value: postgresql
        - name: DB_USER
          value: zulip
        - name: DB_PASSWORD
          value: securepassword
        - name: SETTING_REDIS_HOST
          value: redis
        - name: SETTING_REDIS_PASSWORD
          value: securepassword
        - name: SETTING_RABBITMQ_HOST
          value: rabbitmq
        - name: SETTING_RABBITMQ_PASSWORD
          value: securepassword
        - name: SETTING_MEMCACHED_LOCATION
          value: memcached:11211
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1"
        ports:
        - containerPort: 80
        - containerPort: 443
        volumeMounts:
        - name: zulip-data
          mountPath: /data
      volumes:
      - name: zulip-data
        persistentVolumeClaim:
          claimName: zulip-pvc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
      - name: postgresql
        image: zulip/zulip-postgresql
        env:
        - name: POSTGRES_USER
          value: zulip
        - name: POSTGRES_PASSWORD
          value: securepassword
        - name: POSTGRES_DB
          value: zulip
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata  # Avoid conflicts
        volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgresql-data
        persistentVolumeClaim:
          claimName: postgresql-pvc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:alpine
        env:
        - name: REDIS_PASSWORD
          value: securepassword
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1"
        volumeMounts:
        - name: redis-data
          mountPath: /data
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-pvc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3.12.14
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: zulip
        - name: RABBITMQ_DEFAULT_PASS
          value: securepassword
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1"
        volumeMounts:
        - name: rabbitmq-data
          mountPath: /var/lib/rabbitmq
      volumes:
      - name: rabbitmq-data
        persistentVolumeClaim:
          claimName: rabbitmq-pvc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: memcached
spec:
  replicas: 1
  selector:
    matchLabels:
      app: memcached
  template:
    metadata:
      labels:
        app: memcached
    spec:
      containers:
      - name: memcached
        image: memcached:alpine
        args:
        - "-m"
        - "64"
        - "-p"
        - "11211"
        env:
        - name: MEMCACHED_SERVER
          value: memcached:11211
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        volumeMounts:
        - name: memcached-data
          mountPath: /data
      volumes:
      - name: memcached-data
        persistentVolumeClaim:
          claimName: memcached-pvc
